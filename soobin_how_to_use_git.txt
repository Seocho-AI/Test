<1. git 설치 >
 설치 링크 : https://git-scm.com/

<2. git 사용자 설정 : git 설치후 최초 한번만 설정하면 된다>
 1) git config --global user.name "사용자이름"
 2) git config --global user.email "이메일 주소"


<3. 내 로컬컴퓨터에서 혼자 메모를 쓰는 법 > 

 1) git init ---> 앞으로 이 폴더내에서 일어나는 모든 일들을 기록합니다.

 2) git add ----> 지금까지의 변경 사항을 staging area에 올려서 임시 저장. 
	2-1) add된 모든 내용 취소 : git reset

 3) git commit --->  staging area에 있는 내용을 제목 달고 저장하기.
     git commit -m"commit 메세지 작성"
​
 	3-1) commit 취소 하기

	옵션 : --hard , --soft , --mixed

	--hard : working dir, staging area, commit 모두 취소
	--soft : commit 취소
	--mixed: staging area, commit 취소

	3-2) 최근 commit 을 취소하는 commit 
	     : git revert HEAD




<4. 온라인 메모장(=github) 와 내 로컬컴퓨터를 연결하는 법 >

1)  git remote  ---> 누구의 계정에 어디에 올릴지 정하는 것. github.com/계정명/폴더명.git

                             > 계정과 폴더가 없을 수 있다. 그러면 계정을 만들어주거나 폴더를 만들어 줘야 한다.

                             > 계정과 폴더명을 안다고 아무나 내꺼에  자기들껄 가져다가 쓰면 안되기 때문에 remote를 할때는 

                             > 로그인을 하는 창이 나올것이다.
                             

		 remote 저장소 등록 하는 방법
      		 : git remote add  저장소이름   저장소주소
		 예) git remote add origin https://github.com/oli999/test14.git

                            
1-1) remote 저장소 목록 보기
      : git remote -v

1-2) 등록된 remote 저장소에 업로드 하기
      : git push -u  저장소이름  브랜치명

1-3) remote 저장소의 변경사항 내려 받기
      : git fetch 저장소이름
-------------------------------------------------------------------------------------------------------------------------------------
변경사항 내려 받은후 merge 하기 
: git merge origin/master

fetch 와 merge 를 한번에 하기
: git pull origin

remote 브랜치에서 시작하는 수정할 수 있는 새 브랜치 만들기
: git checkout -b  브랜치명  저장소명/브랜치명

예) git checkout -b lab1 origin/lab1

remote 브랜치 삭제
:git push origin  :삭제할브랜치명 

예)git push origin  :lab1

삭제된 remote 브랜치가 local 에서도 깨끗이 삭제 되도록 하기
 git fetch --all --prune
: git branch -D 삭제할브랜치명 

remote 저장소에 있는 모든 브랜치 내려 받기
: git  fetch  --all





<5. 메모를 업로드 하는 법 >

1) git push ---> 컴퓨터에 commit 되어 있는 메모들을 전부 다 업로드 한다.

​



<6. 메모를 다운로드 하는 법 >

1. git pull ---> 지금 까지 작성된 메모들을 다운로드 한다.

                       > github에 들어가면 온라인으로도 메모를 작성 할 수 있다.

                       > 주의 : github에서 온라인으로 작성한 내용이 있을때 push를 하면 github가 변경 순서가 헷갈려서 이해를 못한다.

	         >  그러니 꼭 온라인으로 뭔가를 작성했다면 pull을 먼저하고 push를 하면 된다.


-------------------------------------------------------------------------------------------------------------------------------------

<7. 브랜치(branch) >
 
 새로운 branch 만들기 :  git branch 브랜치명

 branch 목록 보기 : git branch

 branch 이동 : git checkout 브랜치명

 branch 합치기(merge) - 브랜치를 합치고 싶은 브랜치로 checkout 한 다음 합칠 브랜치를 merge 한다.  
 : git merge 브랜치명 
*주의 : - 합칠때 충돌이 나면 자동 merge 가 안된다.
- 충돌나면 충돌을 해결후  다시  add , commit 을 하면 merge 완성된다. 

branch 삭제 : git branch -d 브랜치명 

-------------------------------------------------------------------------------------------------------------------------------------

커서(HEAD) 를 이전 commit 으로 이동하기 ( ~ 갯수만큼 뒤로 간다. )
 : git  checkout  HEAD~





